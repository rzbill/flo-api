// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: flo/v1/workqueues.proto

package flov1

import (
	v1 "github.com/rzbill/flo-api/flo/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateWorkQueueRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Namespace      string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Partitions     int32                  `protobuf:"varint,3,opt,name=partitions,proto3" json:"partitions,omitempty"`                                 // default from server if zero
	RetentionAgeMs int64                  `protobuf:"varint,4,opt,name=retention_age_ms,json=retentionAgeMs,proto3" json:"retention_age_ms,omitempty"` // optional EventLog mirror retention
	MaxLenBytes    int64                  `protobuf:"varint,5,opt,name=max_len_bytes,json=maxLenBytes,proto3" json:"max_len_bytes,omitempty"`          // optional mirror size cap
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateWorkQueueRequest) Reset() {
	*x = CreateWorkQueueRequest{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWorkQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkQueueRequest) ProtoMessage() {}

func (x *CreateWorkQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkQueueRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkQueueRequest) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{0}
}

func (x *CreateWorkQueueRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateWorkQueueRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateWorkQueueRequest) GetPartitions() int32 {
	if x != nil {
		return x.Partitions
	}
	return 0
}

func (x *CreateWorkQueueRequest) GetRetentionAgeMs() int64 {
	if x != nil {
		return x.RetentionAgeMs
	}
	return 0
}

func (x *CreateWorkQueueRequest) GetMaxLenBytes() int64 {
	if x != nil {
		return x.MaxLenBytes
	}
	return 0
}

type CreateWorkQueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWorkQueueResponse) Reset() {
	*x = CreateWorkQueueResponse{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWorkQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkQueueResponse) ProtoMessage() {}

func (x *CreateWorkQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkQueueResponse.ProtoReflect.Descriptor instead.
func (*CreateWorkQueueResponse) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{1}
}

type EnqueueRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Namespace      string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Payload        []byte                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Headers        map[string]string      `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Key            string                 `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`                                             // partitioning key
	Priority       int32                  `protobuf:"varint,6,opt,name=priority,proto3" json:"priority,omitempty"`                                  // higher = processed first (default 0)
	DelayMs        int64                  `protobuf:"varint,7,opt,name=delay_ms,json=delayMs,proto3" json:"delay_ms,omitempty"`                     // deliver after this delay (default 0)
	IdempotencyKey string                 `protobuf:"bytes,8,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"` // optional deduplication
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EnqueueRequest) Reset() {
	*x = EnqueueRequest{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnqueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueRequest) ProtoMessage() {}

func (x *EnqueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueRequest.ProtoReflect.Descriptor instead.
func (*EnqueueRequest) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{2}
}

func (x *EnqueueRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *EnqueueRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EnqueueRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *EnqueueRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *EnqueueRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *EnqueueRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *EnqueueRequest) GetDelayMs() int64 {
	if x != nil {
		return x.DelayMs
	}
	return 0
}

func (x *EnqueueRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

type EnqueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnqueueResponse) Reset() {
	*x = EnqueueResponse{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnqueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueResponse) ProtoMessage() {}

func (x *EnqueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueResponse.ProtoReflect.Descriptor instead.
func (*EnqueueResponse) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{3}
}

func (x *EnqueueResponse) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type DequeueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Group         string                 `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`                                   // consumer group
	ConsumerId    string                 `protobuf:"bytes,4,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`       // unique consumer identifier
	Count         int32                  `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`                                  // max messages to dequeue (default 1, max 100)
	LeaseMs       int64                  `protobuf:"varint,6,opt,name=lease_ms,json=leaseMs,proto3" json:"lease_ms,omitempty"`               // lease duration (default 30000)
	BlockMs       int64                  `protobuf:"varint,7,opt,name=block_ms,json=blockMs,proto3" json:"block_ms,omitempty"`               // block for new messages (default 5000)
	Policy        *v1.RetryPolicy        `protobuf:"bytes,8,opt,name=policy,proto3" json:"policy,omitempty"`                                 // optional retry policy for this group
	RetryPaceMs   int64                  `protobuf:"varint,9,opt,name=retry_pace_ms,json=retryPaceMs,proto3" json:"retry_pace_ms,omitempty"` // optional pacing between retries
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DequeueRequest) Reset() {
	*x = DequeueRequest{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DequeueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DequeueRequest) ProtoMessage() {}

func (x *DequeueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DequeueRequest.ProtoReflect.Descriptor instead.
func (*DequeueRequest) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{4}
}

func (x *DequeueRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DequeueRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DequeueRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *DequeueRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *DequeueRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DequeueRequest) GetLeaseMs() int64 {
	if x != nil {
		return x.LeaseMs
	}
	return 0
}

func (x *DequeueRequest) GetBlockMs() int64 {
	if x != nil {
		return x.BlockMs
	}
	return 0
}

func (x *DequeueRequest) GetPolicy() *v1.RetryPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *DequeueRequest) GetRetryPaceMs() int64 {
	if x != nil {
		return x.RetryPaceMs
	}
	return 0
}

type DequeueResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Payload          []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Headers          map[string]string      `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Partition        int32                  `protobuf:"varint,4,opt,name=partition,proto3" json:"partition,omitempty"`
	EnqueuedAtMs     int64                  `protobuf:"varint,5,opt,name=enqueued_at_ms,json=enqueuedAtMs,proto3" json:"enqueued_at_ms,omitempty"`
	DeliveryCount    int32                  `protobuf:"varint,6,opt,name=delivery_count,json=deliveryCount,proto3" json:"delivery_count,omitempty"` // number of times delivered
	LeaseExpiresAtMs int64                  `protobuf:"varint,7,opt,name=lease_expires_at_ms,json=leaseExpiresAtMs,proto3" json:"lease_expires_at_ms,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DequeueResponse) Reset() {
	*x = DequeueResponse{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DequeueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DequeueResponse) ProtoMessage() {}

func (x *DequeueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DequeueResponse.ProtoReflect.Descriptor instead.
func (*DequeueResponse) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{5}
}

func (x *DequeueResponse) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DequeueResponse) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *DequeueResponse) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *DequeueResponse) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *DequeueResponse) GetEnqueuedAtMs() int64 {
	if x != nil {
		return x.EnqueuedAtMs
	}
	return 0
}

func (x *DequeueResponse) GetDeliveryCount() int32 {
	if x != nil {
		return x.DeliveryCount
	}
	return 0
}

func (x *DequeueResponse) GetLeaseExpiresAtMs() int64 {
	if x != nil {
		return x.LeaseExpiresAtMs
	}
	return 0
}

type CompleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Group         string                 `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	Id            []byte                 `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteRequest) Reset() {
	*x = CompleteRequest{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteRequest) ProtoMessage() {}

func (x *CompleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteRequest.ProtoReflect.Descriptor instead.
func (*CompleteRequest) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{6}
}

func (x *CompleteRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CompleteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CompleteRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *CompleteRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type CompleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteResponse) Reset() {
	*x = CompleteResponse{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteResponse) ProtoMessage() {}

func (x *CompleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteResponse.ProtoReflect.Descriptor instead.
func (*CompleteResponse) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{7}
}

type FailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Group         string                 `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	Id            []byte                 `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Error         string                 `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`                                      // error message
	RetryAfterMs  int64                  `protobuf:"varint,6,opt,name=retry_after_ms,json=retryAfterMs,proto3" json:"retry_after_ms,omitempty"` // optional override
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FailRequest) Reset() {
	*x = FailRequest{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailRequest) ProtoMessage() {}

func (x *FailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailRequest.ProtoReflect.Descriptor instead.
func (*FailRequest) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{8}
}

func (x *FailRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *FailRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FailRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *FailRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *FailRequest) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *FailRequest) GetRetryAfterMs() int64 {
	if x != nil {
		return x.RetryAfterMs
	}
	return 0
}

type FailResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FailResponse) Reset() {
	*x = FailResponse{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailResponse) ProtoMessage() {}

func (x *FailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailResponse.ProtoReflect.Descriptor instead.
func (*FailResponse) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{9}
}

type ExtendLeaseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Group         string                 `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	Id            []byte                 `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	ExtensionMs   int64                  `protobuf:"varint,5,opt,name=extension_ms,json=extensionMs,proto3" json:"extension_ms,omitempty"` // additional lease time
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtendLeaseRequest) Reset() {
	*x = ExtendLeaseRequest{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtendLeaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendLeaseRequest) ProtoMessage() {}

func (x *ExtendLeaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendLeaseRequest.ProtoReflect.Descriptor instead.
func (*ExtendLeaseRequest) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{10}
}

func (x *ExtendLeaseRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ExtendLeaseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExtendLeaseRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ExtendLeaseRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ExtendLeaseRequest) GetExtensionMs() int64 {
	if x != nil {
		return x.ExtensionMs
	}
	return 0
}

type ExtendLeaseResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NewExpiresAtMs int64                  `protobuf:"varint,1,opt,name=new_expires_at_ms,json=newExpiresAtMs,proto3" json:"new_expires_at_ms,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExtendLeaseResponse) Reset() {
	*x = ExtendLeaseResponse{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtendLeaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendLeaseResponse) ProtoMessage() {}

func (x *ExtendLeaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendLeaseResponse.ProtoReflect.Descriptor instead.
func (*ExtendLeaseResponse) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{11}
}

func (x *ExtendLeaseResponse) GetNewExpiresAtMs() int64 {
	if x != nil {
		return x.NewExpiresAtMs
	}
	return 0
}

type RegisterConsumerRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Namespace      string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Group          string                 `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	ConsumerId     string                 `protobuf:"bytes,4,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	Capacity       int32                  `protobuf:"varint,5,opt,name=capacity,proto3" json:"capacity,omitempty"`                                                                      // max in-flight messages
	Labels         map[string]string      `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // optional metadata
	HeartbeatTtlMs int64                  `protobuf:"varint,7,opt,name=heartbeat_ttl_ms,json=heartbeatTtlMs,proto3" json:"heartbeat_ttl_ms,omitempty"`                                  // TTL for heartbeat (default 15000)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RegisterConsumerRequest) Reset() {
	*x = RegisterConsumerRequest{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterConsumerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterConsumerRequest) ProtoMessage() {}

func (x *RegisterConsumerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterConsumerRequest.ProtoReflect.Descriptor instead.
func (*RegisterConsumerRequest) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{12}
}

func (x *RegisterConsumerRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RegisterConsumerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterConsumerRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *RegisterConsumerRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *RegisterConsumerRequest) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *RegisterConsumerRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *RegisterConsumerRequest) GetHeartbeatTtlMs() int64 {
	if x != nil {
		return x.HeartbeatTtlMs
	}
	return 0
}

type RegisterConsumerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterConsumerResponse) Reset() {
	*x = RegisterConsumerResponse{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterConsumerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterConsumerResponse) ProtoMessage() {}

func (x *RegisterConsumerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterConsumerResponse.ProtoReflect.Descriptor instead.
func (*RegisterConsumerResponse) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{13}
}

type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Group         string                 `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	ConsumerId    string                 `protobuf:"bytes,4,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	InFlight      int32                  `protobuf:"varint,5,opt,name=in_flight,json=inFlight,proto3" json:"in_flight,omitempty"` // current in-flight count
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{14}
}

func (x *HeartbeatRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *HeartbeatRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HeartbeatRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *HeartbeatRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *HeartbeatRequest) GetInFlight() int32 {
	if x != nil {
		return x.InFlight
	}
	return 0
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExpiresAtMs   int64                  `protobuf:"varint,1,opt,name=expires_at_ms,json=expiresAtMs,proto3" json:"expires_at_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{15}
}

func (x *HeartbeatResponse) GetExpiresAtMs() int64 {
	if x != nil {
		return x.ExpiresAtMs
	}
	return 0
}

type UnregisterConsumerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Group         string                 `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	ConsumerId    string                 `protobuf:"bytes,4,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterConsumerRequest) Reset() {
	*x = UnregisterConsumerRequest{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterConsumerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterConsumerRequest) ProtoMessage() {}

func (x *UnregisterConsumerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterConsumerRequest.ProtoReflect.Descriptor instead.
func (*UnregisterConsumerRequest) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{16}
}

func (x *UnregisterConsumerRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UnregisterConsumerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnregisterConsumerRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *UnregisterConsumerRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

type UnregisterConsumerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterConsumerResponse) Reset() {
	*x = UnregisterConsumerResponse{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterConsumerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterConsumerResponse) ProtoMessage() {}

func (x *UnregisterConsumerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterConsumerResponse.ProtoReflect.Descriptor instead.
func (*UnregisterConsumerResponse) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{17}
}

type ListConsumersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Group         string                 `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListConsumersRequest) Reset() {
	*x = ListConsumersRequest{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConsumersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConsumersRequest) ProtoMessage() {}

func (x *ListConsumersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConsumersRequest.ProtoReflect.Descriptor instead.
func (*ListConsumersRequest) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{18}
}

func (x *ListConsumersRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListConsumersRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListConsumersRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type ListConsumersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Consumers     []*ConsumerInfo        `protobuf:"bytes,1,rep,name=consumers,proto3" json:"consumers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListConsumersResponse) Reset() {
	*x = ListConsumersResponse{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConsumersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConsumersResponse) ProtoMessage() {}

func (x *ListConsumersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConsumersResponse.ProtoReflect.Descriptor instead.
func (*ListConsumersResponse) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{19}
}

func (x *ListConsumersResponse) GetConsumers() []*ConsumerInfo {
	if x != nil {
		return x.Consumers
	}
	return nil
}

type ConsumerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerId    string                 `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	Capacity      int32                  `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"`
	InFlight      int32                  `protobuf:"varint,3,opt,name=in_flight,json=inFlight,proto3" json:"in_flight,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	LastSeenMs    int64                  `protobuf:"varint,5,opt,name=last_seen_ms,json=lastSeenMs,proto3" json:"last_seen_ms,omitempty"`
	ExpiresAtMs   int64                  `protobuf:"varint,6,opt,name=expires_at_ms,json=expiresAtMs,proto3" json:"expires_at_ms,omitempty"`
	IsAlive       bool                   `protobuf:"varint,7,opt,name=is_alive,json=isAlive,proto3" json:"is_alive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsumerInfo) Reset() {
	*x = ConsumerInfo{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerInfo) ProtoMessage() {}

func (x *ConsumerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerInfo.ProtoReflect.Descriptor instead.
func (*ConsumerInfo) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{20}
}

func (x *ConsumerInfo) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *ConsumerInfo) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *ConsumerInfo) GetInFlight() int32 {
	if x != nil {
		return x.InFlight
	}
	return 0
}

func (x *ConsumerInfo) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ConsumerInfo) GetLastSeenMs() int64 {
	if x != nil {
		return x.LastSeenMs
	}
	return 0
}

func (x *ConsumerInfo) GetExpiresAtMs() int64 {
	if x != nil {
		return x.ExpiresAtMs
	}
	return 0
}

func (x *ConsumerInfo) GetIsAlive() bool {
	if x != nil {
		return x.IsAlive
	}
	return false
}

type ListPendingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Group         string                 `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	ConsumerId    string                 `protobuf:"bytes,4,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"` // optional: filter by consumer
	Limit         int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`                            // default 100
	StartToken    []byte                 `protobuf:"bytes,6,opt,name=start_token,json=startToken,proto3" json:"start_token,omitempty"` // pagination
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPendingRequest) Reset() {
	*x = ListPendingRequest{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPendingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPendingRequest) ProtoMessage() {}

func (x *ListPendingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPendingRequest.ProtoReflect.Descriptor instead.
func (*ListPendingRequest) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{21}
}

func (x *ListPendingRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListPendingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListPendingRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ListPendingRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *ListPendingRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPendingRequest) GetStartToken() []byte {
	if x != nil {
		return x.StartToken
	}
	return nil
}

type ListPendingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*PendingEntry        `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	NextToken     []byte                 `protobuf:"bytes,2,opt,name=next_token,json=nextToken,proto3" json:"next_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPendingResponse) Reset() {
	*x = ListPendingResponse{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPendingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPendingResponse) ProtoMessage() {}

func (x *ListPendingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPendingResponse.ProtoReflect.Descriptor instead.
func (*ListPendingResponse) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{22}
}

func (x *ListPendingResponse) GetEntries() []*PendingEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *ListPendingResponse) GetNextToken() []byte {
	if x != nil {
		return x.NextToken
	}
	return nil
}

type PendingEntry struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ConsumerId       string                 `protobuf:"bytes,2,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	DeliveryCount    int32                  `protobuf:"varint,3,opt,name=delivery_count,json=deliveryCount,proto3" json:"delivery_count,omitempty"`
	LastDeliveryMs   int64                  `protobuf:"varint,4,opt,name=last_delivery_ms,json=lastDeliveryMs,proto3" json:"last_delivery_ms,omitempty"`
	LeaseExpiresAtMs int64                  `protobuf:"varint,5,opt,name=lease_expires_at_ms,json=leaseExpiresAtMs,proto3" json:"lease_expires_at_ms,omitempty"`
	IdleMs           int64                  `protobuf:"varint,6,opt,name=idle_ms,json=idleMs,proto3" json:"idle_ms,omitempty"` // time since last delivery
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PendingEntry) Reset() {
	*x = PendingEntry{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PendingEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingEntry) ProtoMessage() {}

func (x *PendingEntry) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingEntry.ProtoReflect.Descriptor instead.
func (*PendingEntry) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{23}
}

func (x *PendingEntry) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *PendingEntry) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *PendingEntry) GetDeliveryCount() int32 {
	if x != nil {
		return x.DeliveryCount
	}
	return 0
}

func (x *PendingEntry) GetLastDeliveryMs() int64 {
	if x != nil {
		return x.LastDeliveryMs
	}
	return 0
}

func (x *PendingEntry) GetLeaseExpiresAtMs() int64 {
	if x != nil {
		return x.LeaseExpiresAtMs
	}
	return 0
}

func (x *PendingEntry) GetIdleMs() int64 {
	if x != nil {
		return x.IdleMs
	}
	return 0
}

type ClaimRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Group         string                 `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	NewConsumerId string                 `protobuf:"bytes,4,opt,name=new_consumer_id,json=newConsumerId,proto3" json:"new_consumer_id,omitempty"` // claim for this consumer
	Ids           [][]byte               `protobuf:"bytes,5,rep,name=ids,proto3" json:"ids,omitempty"`                                            // messages to claim
	LeaseMs       int64                  `protobuf:"varint,6,opt,name=lease_ms,json=leaseMs,proto3" json:"lease_ms,omitempty"`                    // new lease duration
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClaimRequest) Reset() {
	*x = ClaimRequest{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClaimRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimRequest) ProtoMessage() {}

func (x *ClaimRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimRequest.ProtoReflect.Descriptor instead.
func (*ClaimRequest) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{24}
}

func (x *ClaimRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ClaimRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClaimRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ClaimRequest) GetNewConsumerId() string {
	if x != nil {
		return x.NewConsumerId
	}
	return ""
}

func (x *ClaimRequest) GetIds() [][]byte {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ClaimRequest) GetLeaseMs() int64 {
	if x != nil {
		return x.LeaseMs
	}
	return 0
}

type ClaimResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClaimedCount  int32                  `protobuf:"varint,1,opt,name=claimed_count,json=claimedCount,proto3" json:"claimed_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClaimResponse) Reset() {
	*x = ClaimResponse{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClaimResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimResponse) ProtoMessage() {}

func (x *ClaimResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimResponse.ProtoReflect.Descriptor instead.
func (*ClaimResponse) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{25}
}

func (x *ClaimResponse) GetClaimedCount() int32 {
	if x != nil {
		return x.ClaimedCount
	}
	return 0
}

type GetWorkQueueStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Group         string                 `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"` // optional: stats for specific group
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkQueueStatsRequest) Reset() {
	*x = GetWorkQueueStatsRequest{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkQueueStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkQueueStatsRequest) ProtoMessage() {}

func (x *GetWorkQueueStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkQueueStatsRequest.ProtoReflect.Descriptor instead.
func (*GetWorkQueueStatsRequest) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{26}
}

func (x *GetWorkQueueStatsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetWorkQueueStatsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetWorkQueueStatsRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type GetWorkQueueStatsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TotalEnqueued  int64                  `protobuf:"varint,1,opt,name=total_enqueued,json=totalEnqueued,proto3" json:"total_enqueued,omitempty"`
	TotalCompleted int64                  `protobuf:"varint,2,opt,name=total_completed,json=totalCompleted,proto3" json:"total_completed,omitempty"`
	TotalFailed    int64                  `protobuf:"varint,3,opt,name=total_failed,json=totalFailed,proto3" json:"total_failed,omitempty"`
	PendingCount   int64                  `protobuf:"varint,4,opt,name=pending_count,json=pendingCount,proto3" json:"pending_count,omitempty"`      // ready to dequeue
	InFlightCount  int64                  `protobuf:"varint,5,opt,name=in_flight_count,json=inFlightCount,proto3" json:"in_flight_count,omitempty"` // leased
	RetryCount     int64                  `protobuf:"varint,6,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`            // waiting for retry
	DlqCount       int64                  `protobuf:"varint,7,opt,name=dlq_count,json=dlqCount,proto3" json:"dlq_count,omitempty"`                  // dead letter queue
	Groups         []*GroupStats          `protobuf:"bytes,8,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetWorkQueueStatsResponse) Reset() {
	*x = GetWorkQueueStatsResponse{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkQueueStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkQueueStatsResponse) ProtoMessage() {}

func (x *GetWorkQueueStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkQueueStatsResponse.ProtoReflect.Descriptor instead.
func (*GetWorkQueueStatsResponse) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{27}
}

func (x *GetWorkQueueStatsResponse) GetTotalEnqueued() int64 {
	if x != nil {
		return x.TotalEnqueued
	}
	return 0
}

func (x *GetWorkQueueStatsResponse) GetTotalCompleted() int64 {
	if x != nil {
		return x.TotalCompleted
	}
	return 0
}

func (x *GetWorkQueueStatsResponse) GetTotalFailed() int64 {
	if x != nil {
		return x.TotalFailed
	}
	return 0
}

func (x *GetWorkQueueStatsResponse) GetPendingCount() int64 {
	if x != nil {
		return x.PendingCount
	}
	return 0
}

func (x *GetWorkQueueStatsResponse) GetInFlightCount() int64 {
	if x != nil {
		return x.InFlightCount
	}
	return 0
}

func (x *GetWorkQueueStatsResponse) GetRetryCount() int64 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *GetWorkQueueStatsResponse) GetDlqCount() int64 {
	if x != nil {
		return x.DlqCount
	}
	return 0
}

func (x *GetWorkQueueStatsResponse) GetGroups() []*GroupStats {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GroupStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Group         string                 `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	PendingCount  int64                  `protobuf:"varint,2,opt,name=pending_count,json=pendingCount,proto3" json:"pending_count,omitempty"`
	InFlightCount int64                  `protobuf:"varint,3,opt,name=in_flight_count,json=inFlightCount,proto3" json:"in_flight_count,omitempty"`
	RetryCount    int64                  `protobuf:"varint,4,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	DlqCount      int64                  `protobuf:"varint,5,opt,name=dlq_count,json=dlqCount,proto3" json:"dlq_count,omitempty"`
	ConsumerCount int32                  `protobuf:"varint,6,opt,name=consumer_count,json=consumerCount,proto3" json:"consumer_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupStats) Reset() {
	*x = GroupStats{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupStats) ProtoMessage() {}

func (x *GroupStats) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupStats.ProtoReflect.Descriptor instead.
func (*GroupStats) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{28}
}

func (x *GroupStats) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GroupStats) GetPendingCount() int64 {
	if x != nil {
		return x.PendingCount
	}
	return 0
}

func (x *GroupStats) GetInFlightCount() int64 {
	if x != nil {
		return x.InFlightCount
	}
	return 0
}

func (x *GroupStats) GetRetryCount() int64 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *GroupStats) GetDlqCount() int64 {
	if x != nil {
		return x.DlqCount
	}
	return 0
}

func (x *GroupStats) GetConsumerCount() int32 {
	if x != nil {
		return x.ConsumerCount
	}
	return 0
}

type ListReadyMessagesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Namespace      string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Partition      int32                  `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`                                 // partition to query (default 0)
	Limit          int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`                                         // max entries to return (default 100, max 1000)
	IncludePayload bool                   `protobuf:"varint,5,opt,name=include_payload,json=includePayload,proto3" json:"include_payload,omitempty"` // include message payload (default false)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListReadyMessagesRequest) Reset() {
	*x = ListReadyMessagesRequest{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReadyMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReadyMessagesRequest) ProtoMessage() {}

func (x *ListReadyMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReadyMessagesRequest.ProtoReflect.Descriptor instead.
func (*ListReadyMessagesRequest) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{29}
}

func (x *ListReadyMessagesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListReadyMessagesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListReadyMessagesRequest) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *ListReadyMessagesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListReadyMessagesRequest) GetIncludePayload() bool {
	if x != nil {
		return x.IncludePayload
	}
	return false
}

type ListReadyMessagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*ReadyMessage        `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListReadyMessagesResponse) Reset() {
	*x = ListReadyMessagesResponse{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReadyMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReadyMessagesResponse) ProtoMessage() {}

func (x *ListReadyMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReadyMessagesResponse.ProtoReflect.Descriptor instead.
func (*ListReadyMessagesResponse) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{30}
}

func (x *ListReadyMessagesResponse) GetMessages() []*ReadyMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type ReadyMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Seq           uint64                 `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`
	Partition     uint32                 `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	Priority      uint32                 `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`                               // lower = higher priority
	EnqueuedAtMs  int64                  `protobuf:"varint,5,opt,name=enqueued_at_ms,json=enqueuedAtMs,proto3" json:"enqueued_at_ms,omitempty"` // when enqueued (0 if not tracked)
	DelayUntilMs  int64                  `protobuf:"varint,6,opt,name=delay_until_ms,json=delayUntilMs,proto3" json:"delay_until_ms,omitempty"` // if > now, message is delayed
	Headers       map[string]string      `protobuf:"bytes,7,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Payload       []byte                 `protobuf:"bytes,8,opt,name=payload,proto3" json:"payload,omitempty"`                             // only if include_payload=true
	PayloadSize   int32                  `protobuf:"varint,9,opt,name=payload_size,json=payloadSize,proto3" json:"payload_size,omitempty"` // size in bytes
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadyMessage) Reset() {
	*x = ReadyMessage{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyMessage) ProtoMessage() {}

func (x *ReadyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyMessage.ProtoReflect.Descriptor instead.
func (*ReadyMessage) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{31}
}

func (x *ReadyMessage) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ReadyMessage) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *ReadyMessage) GetPartition() uint32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *ReadyMessage) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *ReadyMessage) GetEnqueuedAtMs() int64 {
	if x != nil {
		return x.EnqueuedAtMs
	}
	return 0
}

func (x *ReadyMessage) GetDelayUntilMs() int64 {
	if x != nil {
		return x.DelayUntilMs
	}
	return 0
}

func (x *ReadyMessage) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ReadyMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ReadyMessage) GetPayloadSize() int32 {
	if x != nil {
		return x.PayloadSize
	}
	return 0
}

type ListWorkQueueDLQRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Group         string                 `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	StartToken    []byte                 `protobuf:"bytes,5,opt,name=start_token,json=startToken,proto3" json:"start_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkQueueDLQRequest) Reset() {
	*x = ListWorkQueueDLQRequest{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkQueueDLQRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkQueueDLQRequest) ProtoMessage() {}

func (x *ListWorkQueueDLQRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkQueueDLQRequest.ProtoReflect.Descriptor instead.
func (*ListWorkQueueDLQRequest) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{32}
}

func (x *ListWorkQueueDLQRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListWorkQueueDLQRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListWorkQueueDLQRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ListWorkQueueDLQRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListWorkQueueDLQRequest) GetStartToken() []byte {
	if x != nil {
		return x.StartToken
	}
	return nil
}

type ListWorkQueueDLQResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*DLQEntry            `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	NextToken     []byte                 `protobuf:"bytes,2,opt,name=next_token,json=nextToken,proto3" json:"next_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkQueueDLQResponse) Reset() {
	*x = ListWorkQueueDLQResponse{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkQueueDLQResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkQueueDLQResponse) ProtoMessage() {}

func (x *ListWorkQueueDLQResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkQueueDLQResponse.ProtoReflect.Descriptor instead.
func (*ListWorkQueueDLQResponse) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{33}
}

func (x *ListWorkQueueDLQResponse) GetEntries() []*DLQEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *ListWorkQueueDLQResponse) GetNextToken() []byte {
	if x != nil {
		return x.NextToken
	}
	return nil
}

type DLQEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	LastError     string                 `protobuf:"bytes,4,opt,name=last_error,json=lastError,proto3" json:"last_error,omitempty"`
	Attempts      int32                  `protobuf:"varint,5,opt,name=attempts,proto3" json:"attempts,omitempty"`
	DlqAtMs       int64                  `protobuf:"varint,6,opt,name=dlq_at_ms,json=dlqAtMs,proto3" json:"dlq_at_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DLQEntry) Reset() {
	*x = DLQEntry{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DLQEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DLQEntry) ProtoMessage() {}

func (x *DLQEntry) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DLQEntry.ProtoReflect.Descriptor instead.
func (*DLQEntry) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{34}
}

func (x *DLQEntry) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DLQEntry) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *DLQEntry) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *DLQEntry) GetLastError() string {
	if x != nil {
		return x.LastError
	}
	return ""
}

func (x *DLQEntry) GetAttempts() int32 {
	if x != nil {
		return x.Attempts
	}
	return 0
}

func (x *DLQEntry) GetDlqAtMs() int64 {
	if x != nil {
		return x.DlqAtMs
	}
	return 0
}

type ListCompletedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Group         string                 `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`          // optional: filter by group
	Partition     int32                  `protobuf:"varint,4,opt,name=partition,proto3" json:"partition,omitempty"` // partition to query (default 0)
	Limit         int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`         // max entries to return (default 100, max 1000)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCompletedRequest) Reset() {
	*x = ListCompletedRequest{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCompletedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCompletedRequest) ProtoMessage() {}

func (x *ListCompletedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCompletedRequest.ProtoReflect.Descriptor instead.
func (*ListCompletedRequest) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{35}
}

func (x *ListCompletedRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListCompletedRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListCompletedRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ListCompletedRequest) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *ListCompletedRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListCompletedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*CompletedEntry      `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCompletedResponse) Reset() {
	*x = ListCompletedResponse{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCompletedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCompletedResponse) ProtoMessage() {}

func (x *ListCompletedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCompletedResponse.ProtoReflect.Descriptor instead.
func (*ListCompletedResponse) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{36}
}

func (x *ListCompletedResponse) GetEntries() []*CompletedEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type CompletedEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Seq           uint64                 `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`
	Partition     uint32                 `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	Group         string                 `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`
	ConsumerId    string                 `protobuf:"bytes,5,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	EnqueuedAtMs  int64                  `protobuf:"varint,6,opt,name=enqueued_at_ms,json=enqueuedAtMs,proto3" json:"enqueued_at_ms,omitempty"`                                           // when message was enqueued (0 if not tracked)
	DequeuedAtMs  int64                  `protobuf:"varint,7,opt,name=dequeued_at_ms,json=dequeuedAtMs,proto3" json:"dequeued_at_ms,omitempty"`                                           // when message was dequeued
	CompletedAtMs int64                  `protobuf:"varint,8,opt,name=completed_at_ms,json=completedAtMs,proto3" json:"completed_at_ms,omitempty"`                                        // when message was completed
	DurationMs    int64                  `protobuf:"varint,9,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`                                                   // processing duration (completed - dequeued)
	DeliveryCount int32                  `protobuf:"varint,10,opt,name=delivery_count,json=deliveryCount,proto3" json:"delivery_count,omitempty"`                                         // number of delivery attempts
	PayloadSize   int32                  `protobuf:"varint,11,opt,name=payload_size,json=payloadSize,proto3" json:"payload_size,omitempty"`                                               // size of payload in bytes (0 if not tracked)
	Headers       map[string]string      `protobuf:"bytes,12,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // optional headers (if configured)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompletedEntry) Reset() {
	*x = CompletedEntry{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompletedEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletedEntry) ProtoMessage() {}

func (x *CompletedEntry) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletedEntry.ProtoReflect.Descriptor instead.
func (*CompletedEntry) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{37}
}

func (x *CompletedEntry) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *CompletedEntry) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *CompletedEntry) GetPartition() uint32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *CompletedEntry) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *CompletedEntry) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *CompletedEntry) GetEnqueuedAtMs() int64 {
	if x != nil {
		return x.EnqueuedAtMs
	}
	return 0
}

func (x *CompletedEntry) GetDequeuedAtMs() int64 {
	if x != nil {
		return x.DequeuedAtMs
	}
	return 0
}

func (x *CompletedEntry) GetCompletedAtMs() int64 {
	if x != nil {
		return x.CompletedAtMs
	}
	return 0
}

func (x *CompletedEntry) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *CompletedEntry) GetDeliveryCount() int32 {
	if x != nil {
		return x.DeliveryCount
	}
	return 0
}

func (x *CompletedEntry) GetPayloadSize() int32 {
	if x != nil {
		return x.PayloadSize
	}
	return 0
}

func (x *CompletedEntry) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type FlushWorkQueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Group         string                 `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`                        // optional: flush specific group's queues
	FlushDlq      bool                   `protobuf:"varint,4,opt,name=flush_dlq,json=flushDlq,proto3" json:"flush_dlq,omitempty"` // also flush DLQ
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlushWorkQueueRequest) Reset() {
	*x = FlushWorkQueueRequest{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlushWorkQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushWorkQueueRequest) ProtoMessage() {}

func (x *FlushWorkQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushWorkQueueRequest.ProtoReflect.Descriptor instead.
func (*FlushWorkQueueRequest) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{38}
}

func (x *FlushWorkQueueRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *FlushWorkQueueRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FlushWorkQueueRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *FlushWorkQueueRequest) GetFlushDlq() bool {
	if x != nil {
		return x.FlushDlq
	}
	return false
}

type FlushWorkQueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlushedCount  int64                  `protobuf:"varint,1,opt,name=flushed_count,json=flushedCount,proto3" json:"flushed_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlushWorkQueueResponse) Reset() {
	*x = FlushWorkQueueResponse{}
	mi := &file_flo_v1_workqueues_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlushWorkQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushWorkQueueResponse) ProtoMessage() {}

func (x *FlushWorkQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flo_v1_workqueues_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushWorkQueueResponse.ProtoReflect.Descriptor instead.
func (*FlushWorkQueueResponse) Descriptor() ([]byte, []int) {
	return file_flo_v1_workqueues_proto_rawDescGZIP(), []int{39}
}

func (x *FlushWorkQueueResponse) GetFlushedCount() int64 {
	if x != nil {
		return x.FlushedCount
	}
	return 0
}

var File_flo_v1_workqueues_proto protoreflect.FileDescriptor

const file_flo_v1_workqueues_proto_rawDesc = "" +
	"\n" +
	"\x17flo/v1/workqueues.proto\x12\x06flo.v1\x1a\x14flo/v1/streams.proto\"\xb8\x01\n" +
	"\x16CreateWorkQueueRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1e\n" +
	"\n" +
	"partitions\x18\x03 \x01(\x05R\n" +
	"partitions\x12(\n" +
	"\x10retention_age_ms\x18\x04 \x01(\x03R\x0eretentionAgeMs\x12\"\n" +
	"\rmax_len_bytes\x18\x05 \x01(\x03R\vmaxLenBytes\"\x19\n" +
	"\x17CreateWorkQueueResponse\"\xc9\x02\n" +
	"\x0eEnqueueRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\apayload\x18\x03 \x01(\fR\apayload\x12=\n" +
	"\aheaders\x18\x04 \x03(\v2#.flo.v1.EnqueueRequest.HeadersEntryR\aheaders\x12\x10\n" +
	"\x03key\x18\x05 \x01(\tR\x03key\x12\x1a\n" +
	"\bpriority\x18\x06 \x01(\x05R\bpriority\x12\x19\n" +
	"\bdelay_ms\x18\a \x01(\x03R\adelayMs\x12'\n" +
	"\x0fidempotency_key\x18\b \x01(\tR\x0eidempotencyKey\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"!\n" +
	"\x0fEnqueueResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\"\x96\x02\n" +
	"\x0eDequeueRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05group\x18\x03 \x01(\tR\x05group\x12\x1f\n" +
	"\vconsumer_id\x18\x04 \x01(\tR\n" +
	"consumerId\x12\x14\n" +
	"\x05count\x18\x05 \x01(\x05R\x05count\x12\x19\n" +
	"\blease_ms\x18\x06 \x01(\x03R\aleaseMs\x12\x19\n" +
	"\bblock_ms\x18\a \x01(\x03R\ablockMs\x12+\n" +
	"\x06policy\x18\b \x01(\v2\x13.flo.v1.RetryPolicyR\x06policy\x12\"\n" +
	"\rretry_pace_ms\x18\t \x01(\x03R\vretryPaceMs\"\xd1\x02\n" +
	"\x0fDequeueResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\x12>\n" +
	"\aheaders\x18\x03 \x03(\v2$.flo.v1.DequeueResponse.HeadersEntryR\aheaders\x12\x1c\n" +
	"\tpartition\x18\x04 \x01(\x05R\tpartition\x12$\n" +
	"\x0eenqueued_at_ms\x18\x05 \x01(\x03R\fenqueuedAtMs\x12%\n" +
	"\x0edelivery_count\x18\x06 \x01(\x05R\rdeliveryCount\x12-\n" +
	"\x13lease_expires_at_ms\x18\a \x01(\x03R\x10leaseExpiresAtMs\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"i\n" +
	"\x0fCompleteRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05group\x18\x03 \x01(\tR\x05group\x12\x0e\n" +
	"\x02id\x18\x04 \x01(\fR\x02id\"\x12\n" +
	"\x10CompleteResponse\"\xa1\x01\n" +
	"\vFailRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05group\x18\x03 \x01(\tR\x05group\x12\x0e\n" +
	"\x02id\x18\x04 \x01(\fR\x02id\x12\x14\n" +
	"\x05error\x18\x05 \x01(\tR\x05error\x12$\n" +
	"\x0eretry_after_ms\x18\x06 \x01(\x03R\fretryAfterMs\"\x0e\n" +
	"\fFailResponse\"\x8f\x01\n" +
	"\x12ExtendLeaseRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05group\x18\x03 \x01(\tR\x05group\x12\x0e\n" +
	"\x02id\x18\x04 \x01(\fR\x02id\x12!\n" +
	"\fextension_ms\x18\x05 \x01(\x03R\vextensionMs\"@\n" +
	"\x13ExtendLeaseResponse\x12)\n" +
	"\x11new_expires_at_ms\x18\x01 \x01(\x03R\x0enewExpiresAtMs\"\xc8\x02\n" +
	"\x17RegisterConsumerRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05group\x18\x03 \x01(\tR\x05group\x12\x1f\n" +
	"\vconsumer_id\x18\x04 \x01(\tR\n" +
	"consumerId\x12\x1a\n" +
	"\bcapacity\x18\x05 \x01(\x05R\bcapacity\x12C\n" +
	"\x06labels\x18\x06 \x03(\v2+.flo.v1.RegisterConsumerRequest.LabelsEntryR\x06labels\x12(\n" +
	"\x10heartbeat_ttl_ms\x18\a \x01(\x03R\x0eheartbeatTtlMs\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x1a\n" +
	"\x18RegisterConsumerResponse\"\x98\x01\n" +
	"\x10HeartbeatRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05group\x18\x03 \x01(\tR\x05group\x12\x1f\n" +
	"\vconsumer_id\x18\x04 \x01(\tR\n" +
	"consumerId\x12\x1b\n" +
	"\tin_flight\x18\x05 \x01(\x05R\binFlight\"7\n" +
	"\x11HeartbeatResponse\x12\"\n" +
	"\rexpires_at_ms\x18\x01 \x01(\x03R\vexpiresAtMs\"\x84\x01\n" +
	"\x19UnregisterConsumerRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05group\x18\x03 \x01(\tR\x05group\x12\x1f\n" +
	"\vconsumer_id\x18\x04 \x01(\tR\n" +
	"consumerId\"\x1c\n" +
	"\x1aUnregisterConsumerResponse\"^\n" +
	"\x14ListConsumersRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05group\x18\x03 \x01(\tR\x05group\"K\n" +
	"\x15ListConsumersResponse\x122\n" +
	"\tconsumers\x18\x01 \x03(\v2\x14.flo.v1.ConsumerInfoR\tconsumers\"\xbe\x02\n" +
	"\fConsumerInfo\x12\x1f\n" +
	"\vconsumer_id\x18\x01 \x01(\tR\n" +
	"consumerId\x12\x1a\n" +
	"\bcapacity\x18\x02 \x01(\x05R\bcapacity\x12\x1b\n" +
	"\tin_flight\x18\x03 \x01(\x05R\binFlight\x128\n" +
	"\x06labels\x18\x04 \x03(\v2 .flo.v1.ConsumerInfo.LabelsEntryR\x06labels\x12 \n" +
	"\flast_seen_ms\x18\x05 \x01(\x03R\n" +
	"lastSeenMs\x12\"\n" +
	"\rexpires_at_ms\x18\x06 \x01(\x03R\vexpiresAtMs\x12\x19\n" +
	"\bis_alive\x18\a \x01(\bR\aisAlive\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb4\x01\n" +
	"\x12ListPendingRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05group\x18\x03 \x01(\tR\x05group\x12\x1f\n" +
	"\vconsumer_id\x18\x04 \x01(\tR\n" +
	"consumerId\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x05R\x05limit\x12\x1f\n" +
	"\vstart_token\x18\x06 \x01(\fR\n" +
	"startToken\"d\n" +
	"\x13ListPendingResponse\x12.\n" +
	"\aentries\x18\x01 \x03(\v2\x14.flo.v1.PendingEntryR\aentries\x12\x1d\n" +
	"\n" +
	"next_token\x18\x02 \x01(\fR\tnextToken\"\xd8\x01\n" +
	"\fPendingEntry\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x12\x1f\n" +
	"\vconsumer_id\x18\x02 \x01(\tR\n" +
	"consumerId\x12%\n" +
	"\x0edelivery_count\x18\x03 \x01(\x05R\rdeliveryCount\x12(\n" +
	"\x10last_delivery_ms\x18\x04 \x01(\x03R\x0elastDeliveryMs\x12-\n" +
	"\x13lease_expires_at_ms\x18\x05 \x01(\x03R\x10leaseExpiresAtMs\x12\x17\n" +
	"\aidle_ms\x18\x06 \x01(\x03R\x06idleMs\"\xab\x01\n" +
	"\fClaimRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05group\x18\x03 \x01(\tR\x05group\x12&\n" +
	"\x0fnew_consumer_id\x18\x04 \x01(\tR\rnewConsumerId\x12\x10\n" +
	"\x03ids\x18\x05 \x03(\fR\x03ids\x12\x19\n" +
	"\blease_ms\x18\x06 \x01(\x03R\aleaseMs\"4\n" +
	"\rClaimResponse\x12#\n" +
	"\rclaimed_count\x18\x01 \x01(\x05R\fclaimedCount\"b\n" +
	"\x18GetWorkQueueStatsRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05group\x18\x03 \x01(\tR\x05group\"\xc5\x02\n" +
	"\x19GetWorkQueueStatsResponse\x12%\n" +
	"\x0etotal_enqueued\x18\x01 \x01(\x03R\rtotalEnqueued\x12'\n" +
	"\x0ftotal_completed\x18\x02 \x01(\x03R\x0etotalCompleted\x12!\n" +
	"\ftotal_failed\x18\x03 \x01(\x03R\vtotalFailed\x12#\n" +
	"\rpending_count\x18\x04 \x01(\x03R\fpendingCount\x12&\n" +
	"\x0fin_flight_count\x18\x05 \x01(\x03R\rinFlightCount\x12\x1f\n" +
	"\vretry_count\x18\x06 \x01(\x03R\n" +
	"retryCount\x12\x1b\n" +
	"\tdlq_count\x18\a \x01(\x03R\bdlqCount\x12*\n" +
	"\x06groups\x18\b \x03(\v2\x12.flo.v1.GroupStatsR\x06groups\"\xd4\x01\n" +
	"\n" +
	"GroupStats\x12\x14\n" +
	"\x05group\x18\x01 \x01(\tR\x05group\x12#\n" +
	"\rpending_count\x18\x02 \x01(\x03R\fpendingCount\x12&\n" +
	"\x0fin_flight_count\x18\x03 \x01(\x03R\rinFlightCount\x12\x1f\n" +
	"\vretry_count\x18\x04 \x01(\x03R\n" +
	"retryCount\x12\x1b\n" +
	"\tdlq_count\x18\x05 \x01(\x03R\bdlqCount\x12%\n" +
	"\x0econsumer_count\x18\x06 \x01(\x05R\rconsumerCount\"\xa9\x01\n" +
	"\x18ListReadyMessagesRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1c\n" +
	"\tpartition\x18\x03 \x01(\x05R\tpartition\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12'\n" +
	"\x0finclude_payload\x18\x05 \x01(\bR\x0eincludePayload\"M\n" +
	"\x19ListReadyMessagesResponse\x120\n" +
	"\bmessages\x18\x01 \x03(\v2\x14.flo.v1.ReadyMessageR\bmessages\"\xec\x02\n" +
	"\fReadyMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x12\x10\n" +
	"\x03seq\x18\x02 \x01(\x04R\x03seq\x12\x1c\n" +
	"\tpartition\x18\x03 \x01(\rR\tpartition\x12\x1a\n" +
	"\bpriority\x18\x04 \x01(\rR\bpriority\x12$\n" +
	"\x0eenqueued_at_ms\x18\x05 \x01(\x03R\fenqueuedAtMs\x12$\n" +
	"\x0edelay_until_ms\x18\x06 \x01(\x03R\fdelayUntilMs\x12;\n" +
	"\aheaders\x18\a \x03(\v2!.flo.v1.ReadyMessage.HeadersEntryR\aheaders\x12\x18\n" +
	"\apayload\x18\b \x01(\fR\apayload\x12!\n" +
	"\fpayload_size\x18\t \x01(\x05R\vpayloadSize\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x98\x01\n" +
	"\x17ListWorkQueueDLQRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05group\x18\x03 \x01(\tR\x05group\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x1f\n" +
	"\vstart_token\x18\x05 \x01(\fR\n" +
	"startToken\"e\n" +
	"\x18ListWorkQueueDLQResponse\x12*\n" +
	"\aentries\x18\x01 \x03(\v2\x10.flo.v1.DLQEntryR\aentries\x12\x1d\n" +
	"\n" +
	"next_token\x18\x02 \x01(\fR\tnextToken\"\x80\x02\n" +
	"\bDLQEntry\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\x127\n" +
	"\aheaders\x18\x03 \x03(\v2\x1d.flo.v1.DLQEntry.HeadersEntryR\aheaders\x12\x1d\n" +
	"\n" +
	"last_error\x18\x04 \x01(\tR\tlastError\x12\x1a\n" +
	"\battempts\x18\x05 \x01(\x05R\battempts\x12\x1a\n" +
	"\tdlq_at_ms\x18\x06 \x01(\x03R\adlqAtMs\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x92\x01\n" +
	"\x14ListCompletedRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05group\x18\x03 \x01(\tR\x05group\x12\x1c\n" +
	"\tpartition\x18\x04 \x01(\x05R\tpartition\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x05R\x05limit\"I\n" +
	"\x15ListCompletedResponse\x120\n" +
	"\aentries\x18\x01 \x03(\v2\x16.flo.v1.CompletedEntryR\aentries\"\xe1\x03\n" +
	"\x0eCompletedEntry\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x12\x10\n" +
	"\x03seq\x18\x02 \x01(\x04R\x03seq\x12\x1c\n" +
	"\tpartition\x18\x03 \x01(\rR\tpartition\x12\x14\n" +
	"\x05group\x18\x04 \x01(\tR\x05group\x12\x1f\n" +
	"\vconsumer_id\x18\x05 \x01(\tR\n" +
	"consumerId\x12$\n" +
	"\x0eenqueued_at_ms\x18\x06 \x01(\x03R\fenqueuedAtMs\x12$\n" +
	"\x0edequeued_at_ms\x18\a \x01(\x03R\fdequeuedAtMs\x12&\n" +
	"\x0fcompleted_at_ms\x18\b \x01(\x03R\rcompletedAtMs\x12\x1f\n" +
	"\vduration_ms\x18\t \x01(\x03R\n" +
	"durationMs\x12%\n" +
	"\x0edelivery_count\x18\n" +
	" \x01(\x05R\rdeliveryCount\x12!\n" +
	"\fpayload_size\x18\v \x01(\x05R\vpayloadSize\x12=\n" +
	"\aheaders\x18\f \x03(\v2#.flo.v1.CompletedEntry.HeadersEntryR\aheaders\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"|\n" +
	"\x15FlushWorkQueueRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05group\x18\x03 \x01(\tR\x05group\x12\x1b\n" +
	"\tflush_dlq\x18\x04 \x01(\bR\bflushDlq\"=\n" +
	"\x16FlushWorkQueueResponse\x12#\n" +
	"\rflushed_count\x18\x01 \x01(\x03R\fflushedCount2\xfd\t\n" +
	"\x11WorkQueuesService\x12R\n" +
	"\x0fCreateWorkQueue\x12\x1e.flo.v1.CreateWorkQueueRequest\x1a\x1f.flo.v1.CreateWorkQueueResponse\x12:\n" +
	"\aEnqueue\x12\x16.flo.v1.EnqueueRequest\x1a\x17.flo.v1.EnqueueResponse\x12<\n" +
	"\aDequeue\x12\x16.flo.v1.DequeueRequest\x1a\x17.flo.v1.DequeueResponse0\x01\x12=\n" +
	"\bComplete\x12\x17.flo.v1.CompleteRequest\x1a\x18.flo.v1.CompleteResponse\x121\n" +
	"\x04Fail\x12\x13.flo.v1.FailRequest\x1a\x14.flo.v1.FailResponse\x12F\n" +
	"\vExtendLease\x12\x1a.flo.v1.ExtendLeaseRequest\x1a\x1b.flo.v1.ExtendLeaseResponse\x12U\n" +
	"\x10RegisterConsumer\x12\x1f.flo.v1.RegisterConsumerRequest\x1a .flo.v1.RegisterConsumerResponse\x12@\n" +
	"\tHeartbeat\x12\x18.flo.v1.HeartbeatRequest\x1a\x19.flo.v1.HeartbeatResponse\x12[\n" +
	"\x12UnregisterConsumer\x12!.flo.v1.UnregisterConsumerRequest\x1a\".flo.v1.UnregisterConsumerResponse\x12L\n" +
	"\rListConsumers\x12\x1c.flo.v1.ListConsumersRequest\x1a\x1d.flo.v1.ListConsumersResponse\x12F\n" +
	"\vListPending\x12\x1a.flo.v1.ListPendingRequest\x1a\x1b.flo.v1.ListPendingResponse\x124\n" +
	"\x05Claim\x12\x14.flo.v1.ClaimRequest\x1a\x15.flo.v1.ClaimResponse\x12X\n" +
	"\x11GetWorkQueueStats\x12 .flo.v1.GetWorkQueueStatsRequest\x1a!.flo.v1.GetWorkQueueStatsResponse\x12X\n" +
	"\x11ListReadyMessages\x12 .flo.v1.ListReadyMessagesRequest\x1a!.flo.v1.ListReadyMessagesResponse\x12T\n" +
	"\x0fListDLQMessages\x12\x1f.flo.v1.ListWorkQueueDLQRequest\x1a .flo.v1.ListWorkQueueDLQResponse\x12L\n" +
	"\rListCompleted\x12\x1c.flo.v1.ListCompletedRequest\x1a\x1d.flo.v1.ListCompletedResponse\x12F\n" +
	"\x05Flush\x12\x1d.flo.v1.FlushWorkQueueRequest\x1a\x1e.flo.v1.FlushWorkQueueResponseB1Z/github.com/rzbill/flo/proto/gen/go/flo/v1;flov1b\x06proto3"

var (
	file_flo_v1_workqueues_proto_rawDescOnce sync.Once
	file_flo_v1_workqueues_proto_rawDescData []byte
)

func file_flo_v1_workqueues_proto_rawDescGZIP() []byte {
	file_flo_v1_workqueues_proto_rawDescOnce.Do(func() {
		file_flo_v1_workqueues_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_flo_v1_workqueues_proto_rawDesc), len(file_flo_v1_workqueues_proto_rawDesc)))
	})
	return file_flo_v1_workqueues_proto_rawDescData
}

var file_flo_v1_workqueues_proto_msgTypes = make([]protoimpl.MessageInfo, 47)
var file_flo_v1_workqueues_proto_goTypes = []any{
	(*CreateWorkQueueRequest)(nil),     // 0: flo.v1.CreateWorkQueueRequest
	(*CreateWorkQueueResponse)(nil),    // 1: flo.v1.CreateWorkQueueResponse
	(*EnqueueRequest)(nil),             // 2: flo.v1.EnqueueRequest
	(*EnqueueResponse)(nil),            // 3: flo.v1.EnqueueResponse
	(*DequeueRequest)(nil),             // 4: flo.v1.DequeueRequest
	(*DequeueResponse)(nil),            // 5: flo.v1.DequeueResponse
	(*CompleteRequest)(nil),            // 6: flo.v1.CompleteRequest
	(*CompleteResponse)(nil),           // 7: flo.v1.CompleteResponse
	(*FailRequest)(nil),                // 8: flo.v1.FailRequest
	(*FailResponse)(nil),               // 9: flo.v1.FailResponse
	(*ExtendLeaseRequest)(nil),         // 10: flo.v1.ExtendLeaseRequest
	(*ExtendLeaseResponse)(nil),        // 11: flo.v1.ExtendLeaseResponse
	(*RegisterConsumerRequest)(nil),    // 12: flo.v1.RegisterConsumerRequest
	(*RegisterConsumerResponse)(nil),   // 13: flo.v1.RegisterConsumerResponse
	(*HeartbeatRequest)(nil),           // 14: flo.v1.HeartbeatRequest
	(*HeartbeatResponse)(nil),          // 15: flo.v1.HeartbeatResponse
	(*UnregisterConsumerRequest)(nil),  // 16: flo.v1.UnregisterConsumerRequest
	(*UnregisterConsumerResponse)(nil), // 17: flo.v1.UnregisterConsumerResponse
	(*ListConsumersRequest)(nil),       // 18: flo.v1.ListConsumersRequest
	(*ListConsumersResponse)(nil),      // 19: flo.v1.ListConsumersResponse
	(*ConsumerInfo)(nil),               // 20: flo.v1.ConsumerInfo
	(*ListPendingRequest)(nil),         // 21: flo.v1.ListPendingRequest
	(*ListPendingResponse)(nil),        // 22: flo.v1.ListPendingResponse
	(*PendingEntry)(nil),               // 23: flo.v1.PendingEntry
	(*ClaimRequest)(nil),               // 24: flo.v1.ClaimRequest
	(*ClaimResponse)(nil),              // 25: flo.v1.ClaimResponse
	(*GetWorkQueueStatsRequest)(nil),   // 26: flo.v1.GetWorkQueueStatsRequest
	(*GetWorkQueueStatsResponse)(nil),  // 27: flo.v1.GetWorkQueueStatsResponse
	(*GroupStats)(nil),                 // 28: flo.v1.GroupStats
	(*ListReadyMessagesRequest)(nil),   // 29: flo.v1.ListReadyMessagesRequest
	(*ListReadyMessagesResponse)(nil),  // 30: flo.v1.ListReadyMessagesResponse
	(*ReadyMessage)(nil),               // 31: flo.v1.ReadyMessage
	(*ListWorkQueueDLQRequest)(nil),    // 32: flo.v1.ListWorkQueueDLQRequest
	(*ListWorkQueueDLQResponse)(nil),   // 33: flo.v1.ListWorkQueueDLQResponse
	(*DLQEntry)(nil),                   // 34: flo.v1.DLQEntry
	(*ListCompletedRequest)(nil),       // 35: flo.v1.ListCompletedRequest
	(*ListCompletedResponse)(nil),      // 36: flo.v1.ListCompletedResponse
	(*CompletedEntry)(nil),             // 37: flo.v1.CompletedEntry
	(*FlushWorkQueueRequest)(nil),      // 38: flo.v1.FlushWorkQueueRequest
	(*FlushWorkQueueResponse)(nil),     // 39: flo.v1.FlushWorkQueueResponse
	nil,                                // 40: flo.v1.EnqueueRequest.HeadersEntry
	nil,                                // 41: flo.v1.DequeueResponse.HeadersEntry
	nil,                                // 42: flo.v1.RegisterConsumerRequest.LabelsEntry
	nil,                                // 43: flo.v1.ConsumerInfo.LabelsEntry
	nil,                                // 44: flo.v1.ReadyMessage.HeadersEntry
	nil,                                // 45: flo.v1.DLQEntry.HeadersEntry
	nil,                                // 46: flo.v1.CompletedEntry.HeadersEntry
	(*v1.RetryPolicy)(nil),             // 47: flo.v1.RetryPolicy
}
var file_flo_v1_workqueues_proto_depIdxs = []int32{
	40, // 0: flo.v1.EnqueueRequest.headers:type_name -> flo.v1.EnqueueRequest.HeadersEntry
	47, // 1: flo.v1.DequeueRequest.policy:type_name -> flo.v1.RetryPolicy
	41, // 2: flo.v1.DequeueResponse.headers:type_name -> flo.v1.DequeueResponse.HeadersEntry
	42, // 3: flo.v1.RegisterConsumerRequest.labels:type_name -> flo.v1.RegisterConsumerRequest.LabelsEntry
	20, // 4: flo.v1.ListConsumersResponse.consumers:type_name -> flo.v1.ConsumerInfo
	43, // 5: flo.v1.ConsumerInfo.labels:type_name -> flo.v1.ConsumerInfo.LabelsEntry
	23, // 6: flo.v1.ListPendingResponse.entries:type_name -> flo.v1.PendingEntry
	28, // 7: flo.v1.GetWorkQueueStatsResponse.groups:type_name -> flo.v1.GroupStats
	31, // 8: flo.v1.ListReadyMessagesResponse.messages:type_name -> flo.v1.ReadyMessage
	44, // 9: flo.v1.ReadyMessage.headers:type_name -> flo.v1.ReadyMessage.HeadersEntry
	34, // 10: flo.v1.ListWorkQueueDLQResponse.entries:type_name -> flo.v1.DLQEntry
	45, // 11: flo.v1.DLQEntry.headers:type_name -> flo.v1.DLQEntry.HeadersEntry
	37, // 12: flo.v1.ListCompletedResponse.entries:type_name -> flo.v1.CompletedEntry
	46, // 13: flo.v1.CompletedEntry.headers:type_name -> flo.v1.CompletedEntry.HeadersEntry
	0,  // 14: flo.v1.WorkQueuesService.CreateWorkQueue:input_type -> flo.v1.CreateWorkQueueRequest
	2,  // 15: flo.v1.WorkQueuesService.Enqueue:input_type -> flo.v1.EnqueueRequest
	4,  // 16: flo.v1.WorkQueuesService.Dequeue:input_type -> flo.v1.DequeueRequest
	6,  // 17: flo.v1.WorkQueuesService.Complete:input_type -> flo.v1.CompleteRequest
	8,  // 18: flo.v1.WorkQueuesService.Fail:input_type -> flo.v1.FailRequest
	10, // 19: flo.v1.WorkQueuesService.ExtendLease:input_type -> flo.v1.ExtendLeaseRequest
	12, // 20: flo.v1.WorkQueuesService.RegisterConsumer:input_type -> flo.v1.RegisterConsumerRequest
	14, // 21: flo.v1.WorkQueuesService.Heartbeat:input_type -> flo.v1.HeartbeatRequest
	16, // 22: flo.v1.WorkQueuesService.UnregisterConsumer:input_type -> flo.v1.UnregisterConsumerRequest
	18, // 23: flo.v1.WorkQueuesService.ListConsumers:input_type -> flo.v1.ListConsumersRequest
	21, // 24: flo.v1.WorkQueuesService.ListPending:input_type -> flo.v1.ListPendingRequest
	24, // 25: flo.v1.WorkQueuesService.Claim:input_type -> flo.v1.ClaimRequest
	26, // 26: flo.v1.WorkQueuesService.GetWorkQueueStats:input_type -> flo.v1.GetWorkQueueStatsRequest
	29, // 27: flo.v1.WorkQueuesService.ListReadyMessages:input_type -> flo.v1.ListReadyMessagesRequest
	32, // 28: flo.v1.WorkQueuesService.ListDLQMessages:input_type -> flo.v1.ListWorkQueueDLQRequest
	35, // 29: flo.v1.WorkQueuesService.ListCompleted:input_type -> flo.v1.ListCompletedRequest
	38, // 30: flo.v1.WorkQueuesService.Flush:input_type -> flo.v1.FlushWorkQueueRequest
	1,  // 31: flo.v1.WorkQueuesService.CreateWorkQueue:output_type -> flo.v1.CreateWorkQueueResponse
	3,  // 32: flo.v1.WorkQueuesService.Enqueue:output_type -> flo.v1.EnqueueResponse
	5,  // 33: flo.v1.WorkQueuesService.Dequeue:output_type -> flo.v1.DequeueResponse
	7,  // 34: flo.v1.WorkQueuesService.Complete:output_type -> flo.v1.CompleteResponse
	9,  // 35: flo.v1.WorkQueuesService.Fail:output_type -> flo.v1.FailResponse
	11, // 36: flo.v1.WorkQueuesService.ExtendLease:output_type -> flo.v1.ExtendLeaseResponse
	13, // 37: flo.v1.WorkQueuesService.RegisterConsumer:output_type -> flo.v1.RegisterConsumerResponse
	15, // 38: flo.v1.WorkQueuesService.Heartbeat:output_type -> flo.v1.HeartbeatResponse
	17, // 39: flo.v1.WorkQueuesService.UnregisterConsumer:output_type -> flo.v1.UnregisterConsumerResponse
	19, // 40: flo.v1.WorkQueuesService.ListConsumers:output_type -> flo.v1.ListConsumersResponse
	22, // 41: flo.v1.WorkQueuesService.ListPending:output_type -> flo.v1.ListPendingResponse
	25, // 42: flo.v1.WorkQueuesService.Claim:output_type -> flo.v1.ClaimResponse
	27, // 43: flo.v1.WorkQueuesService.GetWorkQueueStats:output_type -> flo.v1.GetWorkQueueStatsResponse
	30, // 44: flo.v1.WorkQueuesService.ListReadyMessages:output_type -> flo.v1.ListReadyMessagesResponse
	33, // 45: flo.v1.WorkQueuesService.ListDLQMessages:output_type -> flo.v1.ListWorkQueueDLQResponse
	36, // 46: flo.v1.WorkQueuesService.ListCompleted:output_type -> flo.v1.ListCompletedResponse
	39, // 47: flo.v1.WorkQueuesService.Flush:output_type -> flo.v1.FlushWorkQueueResponse
	31, // [31:48] is the sub-list for method output_type
	14, // [14:31] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_flo_v1_workqueues_proto_init() }
func file_flo_v1_workqueues_proto_init() {
	if File_flo_v1_workqueues_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_flo_v1_workqueues_proto_rawDesc), len(file_flo_v1_workqueues_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   47,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_flo_v1_workqueues_proto_goTypes,
		DependencyIndexes: file_flo_v1_workqueues_proto_depIdxs,
		MessageInfos:      file_flo_v1_workqueues_proto_msgTypes,
	}.Build()
	File_flo_v1_workqueues_proto = out.File
	file_flo_v1_workqueues_proto_goTypes = nil
	file_flo_v1_workqueues_proto_depIdxs = nil
}
